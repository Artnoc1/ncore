#include <cxxtest/TestSuite.h>
#include <Clock.h>
#include <vector>
#include <string>
#include <unistd.h>

using std::string;
using std::vector;

extern "C" void mock_time_reset(void);

class ClockTestSuite: public CxxTest::TestSuite
{
  Clock clock;
public:
  void setUp()
  {
    mock_time_reset();
    clock = Clock();
  }

  void testMock( void )
  {
    usleep(1000);
    usleep(1000);
    usleep(1000);
    struct timeval t;
    gettimeofday(&t,NULL);
    TS_ASSERT_EQUALS(t.tv_sec,0);
    TS_ASSERT_EQUALS(t.tv_usec,3000);
  }
  void testStart( void )
  {
    TS_ASSERT_EQUALS( clock.millis(), 0UL );
  }
  void testDelay( void )
  {
    clock.delay(10);
    TS_ASSERT_EQUALS( clock.millis(), 10UL );
  }
  void testDelayUS( void )
  {
    clock.delayMicroseconds(1000);
    TS_ASSERT_EQUALS( clock.millis(), 1UL );
  }
  void testCombined( void )
  {
    clock.delay(10);
    clock.delay(10);
    clock.delay(10);
    clock.delayMicroseconds(2000);
    clock.delayMicroseconds(900);
    TS_ASSERT_EQUALS( clock.millis(), 32UL );
  }
};
// vim:cin:ai:sts=2 sw=2 ft=cpp
