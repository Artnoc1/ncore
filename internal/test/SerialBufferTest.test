#include <cxxtest/TestSuite.h>

#include <SerialBuffer.h>
#include <Logger.h>

using namespace std;

class SerialBufferTestSuite: public CxxTest::TestSuite
{
  Logger log;
public:
  void setUp()
  {
    log.clear();
  }

  void testEmpty( void )
  {
    SerialBuffer s(log);

    TS_ASSERT_EQUALS( log.size(), 0 );
  }
  void testOutput( void )
  {
    SerialBuffer s(log);

    s.put("test");

    TS_ASSERT_EQUALS( log.size(), 1 );
    TS_ASSERT( log.at(0).find("test") != string::npos );
  }
  void testChars( void )
  {
    SerialBuffer s(log);

    s.put('t');
    s.put('e');
    s.put('s');
    s.put('t');
    s.put('\n');

    TS_ASSERT_EQUALS( log.size(), 1 );
    TS_ASSERT( log.at(0).find("test") != string::npos );
  }
  void testNoCR( void )
  {
    SerialBuffer s(log);

    s.put('t');
    s.put('e');
    s.put('s');
    s.put('t');

    TS_ASSERT_EQUALS( log.size(), 0 );
  }
  void testAvailable( void )
  {
    SerialBuffer s(log);
    
    TS_ASSERT_EQUALS( s.available(), false );
  }
  void testSetInputBuffer( void )
  {
    SerialBuffer s(log);
    s.setInput(string("hi"));
    
    TS_ASSERT_EQUALS( s.available(), true );
    TS_ASSERT_EQUALS( s.get(), 'h' );
    TS_ASSERT_EQUALS( s.get(), 'i' );
    TS_ASSERT_EQUALS( s.available(), false );
  }
};
// vim:cin:ai:sts=2 sw=2 ft=cpp
